// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: diarize.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const createDiarize = `-- name: CreateDiarize :exec
INSERT INTO diarize (task_id, convert_id) VALUES ($1, $2)
`

type CreateDiarizeParams struct {
	TaskID    uuid.UUID `json:"task_id"`
	ConvertID uuid.UUID `json:"convert_id"`
}

func (q *Queries) CreateDiarize(ctx context.Context, arg CreateDiarizeParams) error {
	_, err := q.db.Exec(ctx, createDiarize, arg.TaskID, arg.ConvertID)
	return err
}

const getDiarizeIDByTaskID = `-- name: GetDiarizeIDByTaskID :one
SELECT ID FROM diarize WHERE task_id = $1
`

func (q *Queries) GetDiarizeIDByTaskID(ctx context.Context, taskID uuid.UUID) (uuid.UUID, error) {
	row := q.db.QueryRow(ctx, getDiarizeIDByTaskID, taskID)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
