// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ===== TRANSCRIPTION TASK =====
type MessageTranscriptionTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FileUrl       string                 `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	CallbackUrl   string                 `protobuf:"bytes,3,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	StartTime     float64                `protobuf:"fixed64,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       float64                `protobuf:"fixed64,5,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTranscriptionTask) Reset() {
	*x = MessageTranscriptionTask{}
	mi := &file_proto_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTranscriptionTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTranscriptionTask) ProtoMessage() {}

func (x *MessageTranscriptionTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTranscriptionTask.ProtoReflect.Descriptor instead.
func (*MessageTranscriptionTask) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{0}
}

func (x *MessageTranscriptionTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *MessageTranscriptionTask) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *MessageTranscriptionTask) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

func (x *MessageTranscriptionTask) GetStartTime() float64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MessageTranscriptionTask) GetEndTime() float64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

// ===== CONVERT TASK =====
type MessageConvertTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	FileUrl       string                 `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3" json:"file_url,omitempty"`
	CallbackUrl   string                 `protobuf:"bytes,3,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageConvertTask) Reset() {
	*x = MessageConvertTask{}
	mi := &file_proto_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageConvertTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageConvertTask) ProtoMessage() {}

func (x *MessageConvertTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageConvertTask.ProtoReflect.Descriptor instead.
func (*MessageConvertTask) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{1}
}

func (x *MessageConvertTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *MessageConvertTask) GetFileUrl() string {
	if x != nil {
		return x.FileUrl
	}
	return ""
}

func (x *MessageConvertTask) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

// ===== DIARIZE TASK =====
type MessageDiarizeTask struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ConvertedFileUrl string                 `protobuf:"bytes,2,opt,name=converted_file_url,json=convertedFileUrl,proto3" json:"converted_file_url,omitempty"`
	CallbackUrl      string                 `protobuf:"bytes,3,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *MessageDiarizeTask) Reset() {
	*x = MessageDiarizeTask{}
	mi := &file_proto_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageDiarizeTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageDiarizeTask) ProtoMessage() {}

func (x *MessageDiarizeTask) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageDiarizeTask.ProtoReflect.Descriptor instead.
func (*MessageDiarizeTask) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{2}
}

func (x *MessageDiarizeTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *MessageDiarizeTask) GetConvertedFileUrl() string {
	if x != nil {
		return x.ConvertedFileUrl
	}
	return ""
}

func (x *MessageDiarizeTask) GetCallbackUrl() string {
	if x != nil {
		return x.CallbackUrl
	}
	return ""
}

// ===== SEGMENT STRUCTURE =====
type Segment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Speaker       int32                  `protobuf:"varint,1,opt,name=speaker,proto3" json:"speaker,omitempty"`
	StartTime     float64                `protobuf:"fixed64,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       float64                `protobuf:"fixed64,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Segment) Reset() {
	*x = Segment{}
	mi := &file_proto_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{3}
}

func (x *Segment) GetSpeaker() int32 {
	if x != nil {
		return x.Speaker
	}
	return 0
}

func (x *Segment) GetStartTime() float64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Segment) GetEndTime() float64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type SegmentsTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segments      []*Segment             `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SegmentsTaskResponse) Reset() {
	*x = SegmentsTaskResponse{}
	mi := &file_proto_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SegmentsTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentsTaskResponse) ProtoMessage() {}

func (x *SegmentsTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentsTaskResponse.ProtoReflect.Descriptor instead.
func (*SegmentsTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{4}
}

func (x *SegmentsTaskResponse) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type TranscriptionTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transcription string                 `protobuf:"bytes,1,opt,name=transcription,proto3" json:"transcription,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptionTaskResponse) Reset() {
	*x = TranscriptionTaskResponse{}
	mi := &file_proto_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptionTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptionTaskResponse) ProtoMessage() {}

func (x *TranscriptionTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptionTaskResponse.ProtoReflect.Descriptor instead.
func (*TranscriptionTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_messages_proto_rawDescGZIP(), []int{5}
}

func (x *TranscriptionTaskResponse) GetTranscription() string {
	if x != nil {
		return x.Transcription
	}
	return ""
}

var File_proto_messages_proto protoreflect.FileDescriptor

const file_proto_messages_proto_rawDesc = "" +
	"\n" +
	"\x14proto/messages.proto\x12\bmessages\"\xab\x01\n" +
	"\x18MessageTranscriptionTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\bfile_url\x18\x02 \x01(\tR\afileUrl\x12!\n" +
	"\fcallback_url\x18\x03 \x01(\tR\vcallbackUrl\x12\x1d\n" +
	"\n" +
	"start_time\x18\x04 \x01(\x01R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x05 \x01(\x01R\aendTime\"k\n" +
	"\x12MessageConvertTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x19\n" +
	"\bfile_url\x18\x02 \x01(\tR\afileUrl\x12!\n" +
	"\fcallback_url\x18\x03 \x01(\tR\vcallbackUrl\"~\n" +
	"\x12MessageDiarizeTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12,\n" +
	"\x12converted_file_url\x18\x02 \x01(\tR\x10convertedFileUrl\x12!\n" +
	"\fcallback_url\x18\x03 \x01(\tR\vcallbackUrl\"]\n" +
	"\aSegment\x12\x18\n" +
	"\aspeaker\x18\x01 \x01(\x05R\aspeaker\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\x01R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\x01R\aendTime\"E\n" +
	"\x14SegmentsTaskResponse\x12-\n" +
	"\bsegments\x18\x01 \x03(\v2\x11.messages.SegmentR\bsegments\"A\n" +
	"\x19TranscriptionTaskResponse\x12$\n" +
	"\rtranscription\x18\x01 \x01(\tR\rtranscriptionB\x13Z\x11main/pkg/messagesb\x06proto3"

var (
	file_proto_messages_proto_rawDescOnce sync.Once
	file_proto_messages_proto_rawDescData []byte
)

func file_proto_messages_proto_rawDescGZIP() []byte {
	file_proto_messages_proto_rawDescOnce.Do(func() {
		file_proto_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_messages_proto_rawDesc), len(file_proto_messages_proto_rawDesc)))
	})
	return file_proto_messages_proto_rawDescData
}

var file_proto_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_messages_proto_goTypes = []any{
	(*MessageTranscriptionTask)(nil),  // 0: messages.MessageTranscriptionTask
	(*MessageConvertTask)(nil),        // 1: messages.MessageConvertTask
	(*MessageDiarizeTask)(nil),        // 2: messages.MessageDiarizeTask
	(*Segment)(nil),                   // 3: messages.Segment
	(*SegmentsTaskResponse)(nil),      // 4: messages.SegmentsTaskResponse
	(*TranscriptionTaskResponse)(nil), // 5: messages.TranscriptionTaskResponse
}
var file_proto_messages_proto_depIdxs = []int32{
	3, // 0: messages.SegmentsTaskResponse.segments:type_name -> messages.Segment
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_messages_proto_init() }
func file_proto_messages_proto_init() {
	if File_proto_messages_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_messages_proto_rawDesc), len(file_proto_messages_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_messages_proto_goTypes,
		DependencyIndexes: file_proto_messages_proto_depIdxs,
		MessageInfos:      file_proto_messages_proto_msgTypes,
	}.Build()
	File_proto_messages_proto = out.File
	file_proto_messages_proto_goTypes = nil
	file_proto_messages_proto_depIdxs = nil
}
